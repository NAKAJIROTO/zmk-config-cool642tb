#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4 // 各自のマウスレイヤーに合わせて設定

// #includeのあとのあたりにスクロール量変更の定義を追記

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mkp_input_listener { input-processors = <&zip_temp_layer MOUSE 200>; };

#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 7>;
        };

        comb3 {
            bindings = <&kp CAPS>;
            key-positions = <13 14>;
        };

        comb4 {
            bindings = <&kp LA(GRAVE)>;
            key-positions = <3 4>;
        };

        com5 {
            bindings = <&to 1>;
            key-positions = <5 6>;
            slow-release;
            layers = <0>;
        };

        comb6 {
            bindings = <&to 0>;
            key-positions = <5 6>;
            slow-release;
            layers = <1>;
        };

        combo6 {
            bindings = <&kp RIGHT>;
            key-positions = <19 8>;
        };

        combo7 {
            bindings = <&CTHOME>;
            key-positions = <8 9>;
        };

        combo8 {
            bindings = <&CTEND>;
            key-positions = <32 33>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ret_kp: ret_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER>;

            label = "RET_KP";
        };

        ENTENT: ENTENT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp ENTER &kp ENTER &kp ENTER &kp ENTER &kp ENTER>;
            label = "ENTENT";
        };

        OO: OO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
            label = "OO";
        };

        DBC: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1>, <&macro_wait_time 100>, <&mkp MB1>;

            label = "NEW_MACRO";
        };

        PAV: PAV {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(V)) &kp V &kp ENTER>;
            label = "PAV";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "KAKKO";
        };

        DQ: DQ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "DQ";
        };

        CTHOME: CTHOME {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(HOME)>;
            label = "CTHOME";
        };

        CTEND: CTEND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(END)>;
            label = "CTEND";
        };

        ENTENTENT: ENTENTENT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp ENTER &kp ENTER &kp ENTER &kp ENTER &kp ENTER &kp ENTER>;
            label = "ENTENTENT";
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                            &kp W                            &kp E              &kp R                       &kp T                                 &kp Y        &kp U  &kp I     &kp O    &kp P
&kp A                            &kp S                            &kp D              &kp F                       &kp G        &kp A        &mo 4       &kp H        &kp J  &kp K     &kp L    &kp MINUS
&kp Z                            &kp X                            &kp C              &kp V                       &kp B        &mo 5        &mo 5       &kp N        &kp M  &mkp MB1  &kp TAB  &kp LS(TAB)
&mt LEFT_SHIFT LS(LC(UP_ARROW))  &mt LEFT_GUI LS(LC(DOWN_ARROW))  &mt LEFT_ALT DOWN  &mt LEFT_CONTROL BACKSPACE  &lt 2 SPACE  &lt 1 ENTER  &lt 2 DOWN  &lt 1 ENTER                            &kp ESCAPE
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&kp EQUAL   &kp KP_PLUS  &kp KP_MINUS  &kp KP_ASTERISK  &kp NUBS                                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp KP_SLASH
&ENTENTENT  &kp LEFT     &kp UP_ARROW  &kp RIGHT        &kp F9                &trans       &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &OO              &trans
&kp LC(F)   &ENTENT      &kp LC(C)     &kp LC(V)        &kp LC(SINGLE_QUOTE)  &none        &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans           &trans
&trans      &to 0        &trans        &trans           &lt 4 SPACE           &lt 3 SPACE  &trans  &trans                                                              &kp DELETE
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        NUM {
            bindings = <
&kp AT    &kp RS(UNDER)     &kp QUESTION          &kp PERCENT  &kp TILDE                          &kp F1   &kp F2    &kp F3     &kp F4     &kp F5
&kp EXCL  &kp HASH          &kp DOLLAR            &kp CARET    &kp AMPS           &kp N1  &trans  &kp F6   &kp F7    &kp F8     &kp F9     &kp F10
&kakko    &kp LS(LC(DOWN))  &kp LS(LC(UP_ARROW))  &kp GRAVE    &kp DOUBLE_QUOTES  &trans  &trans  &kp F11  &kp SEMI  &kp COLON  &kp COMMA  &kp DOT
&trans    &trans            &trans                &trans       &trans             &trans  &trans  &trans                                   &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        ARROW {
            bindings = <
&kp Q              &kp PRINTSCREEN  &kp E     &kp R      &kp T                   &bt BT_SEL 0  &bt BT_SEL 1  &kp I         &kp O       &kp P
&kp A              &kp LEFT         &kp UP    &kp RIGHT  &kp G   &kp N1  &trans  &kp H         &kp LEFT      &kp UP_ARROW  &kp RIGHT   &trans
&kp LA(LC(EQUAL))  &kp X            &kp DOWN  &kp V      &kp B   &trans  &trans  &kp N         &kp M         &kp DOWN      &kp PERIOD  &kp SLASH
&trans             &trans           &trans    &trans     &trans  &trans  &trans  &trans                                                &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MOUSE {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &trans                  &mo 0   &kp U   &kp I     &mkp MB2  &mo 5
&kp A   &mo 5   &kp D   &kp F   &kp G   &kp N1  &kp N2  &kp H   &trans  &DBC      &mkp MB2  &kp ENTER
&kp Z   &kp X   &kp C   &kp V   &kp B   &trans  &trans  &kp N   &kp M   &mkp MB1  &mkp MB2  &kp SLASH
&trans  &trans  &trans  &trans  &trans  &none   &trans  &trans                              &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SCROLL {
            bindings = <
&bootloader  &kp W   &kp E   &kp R   &kp T                        &kp Y   &kp U  &kp I      &kp O       &mo 5
&kp A        &mo 5   &kp D   &kp F   &kp G   &kp N1  &bootloader  &kp H   &kp J  &kp K      &kp L       &kp ENTER
&kp Z        &kp X   &kp C   &kp V   &kp B   &trans  &kp N4       &kp N   &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&trans       &trans  &trans  &trans  &trans  &mo 1   &trans       &trans                                &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
